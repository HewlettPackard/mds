/*
 *
 *  Managed Data Structures
 *  Copyright Â© 2016 Hewlett Packard Enterprise Development Company LP.
 *
 *  This program is free software: you can redistribute it and/or modify
 *  it under the terms of the GNU Lesser General Public License as published by
 *  the Free Software Foundation, either version 3 of the License, or
 *  (at your option) any later version.
 *
 *  This program is distributed in the hope that it will be useful,
 *  but WITHOUT ANY WARRANTY; without even the implied warranty of
 *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 *  GNU Lesser General Public License for more details.
 *
 *  You should have received a copy of the GNU Lesser General Public License
 *  along with this program.  If not, see <http://www.gnu.org/licenses/>.
 *
 *  As an exception, the copyright holders of this Library grant you permission
 *  to (i) compile an Application with the Library, and (ii) distribute the 
 *  Application containing code generated by the Library and added to the 
 *  Application during this compilation process under terms of your choice, 
 *  provided you also meet the terms and conditions of the Application license.
 *
 */

/*
 * core_msv_split.h
 *
 *  Created on: Nov 28, 2014
 *      Author: evank
 */

#ifndef CORE_MSV_SPLIT_H_
#define CORE_MSV_SPLIT_H_

/*
 * I had to split write_task's init_conversion_table into separate functions
 * because otherwise on Windows, with Debugging, I got
 *     Fatal error: can't write src/core_msv.o: File too big
 *     too many sections (32880)
 *     Fatal error: can't close src/core_msv.o: File too big
 */

#include "core/core_coop.h"
#include "core/core_msv.h"
#include "core/core_kind.h"
#include "core/core_record.h"
#include "core/core_naming.h"
#include "core/core_array.h"

namespace mds {
  namespace core {
    namespace msv_split {
      extern void write_task_init_1(mpgc::gc_allocated_with_virtuals<mds::core::cooperative_task<core::wm_task_disc>, core::wm_task_disc>::vf_table &);
      extern void write_task_init_2(mpgc::gc_allocated_with_virtuals<mds::core::cooperative_task<core::wm_task_disc>, core::wm_task_disc>::vf_table &);
    }
  }
}




#endif /* CORE_MSV_SPLIT_H_ */
