/*
 *
 *  Managed Data Structures
 *  Copyright © 2016 Hewlett Packard Enterprise Development Company LP.
 *
 *  This program is free software: you can redistribute it and/or modify
 *  it under the terms of the GNU Lesser General Public License as published by
 *  the Free Software Foundation, either version 3 of the License, or
 *  (at your option) any later version.
 *
 *  This program is distributed in the hope that it will be useful,
 *  but WITHOUT ANY WARRANTY; without even the implied warranty of
 *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 *  GNU Lesser General Public License for more details.
 *
 *  You should have received a copy of the GNU Lesser General Public License
 *  along with this program.  If not, see <http://www.gnu.org/licenses/>.
 *
 *  As an exception, the copyright holders of this Library grant you permission
 *  to (i) compile an Application with the Library, and (ii) distribute the 
 *  Application containing code generated by the Library and added to the 
 *  Application during this compilation process under terms of your choice, 
 *  provided you also meet the terms and conditions of the Application license.
 *
 */

delimiters "$", "$"
package(type) ::= "com.hpl.mds"
class(type) ::= "$type.shortName$Predicate"

code(type,types) ::= <<
/*
 *
 *  Managed Data Structures
 *  Copyright © 2016 Hewlett Packard Enterprise Development Company LP.
 *
 *  This program is free software: you can redistribute it and/or modify
 *  it under the terms of the GNU Lesser General Public License as published by
 *  the Free Software Foundation, either version 3 of the License, or
 *  (at your option) any later version.
 *
 *  This program is distributed in the hope that it will be useful,
 *  but WITHOUT ANY WARRANTY; without even the implied warranty of
 *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 *  GNU Lesser General Public License for more details.
 *
 *  You should have received a copy of the GNU Lesser General Public License
 *  along with this program.  If not, see <http://www.gnu.org/licenses/>.
 *
 *  As an exception, the copyright holders of this Library grant you permission
 *  to (i) compile an Application with the Library, and (ii) distribute the 
 *  Application containing code generated by the Library and added to the 
 *  Application during this compilation process under terms of your choice, 
 *  provided you also meet the terms and conditions of the Application license.
 *
 */

$body(class(type), type, type.managedName, type.boxedName, type.primName, type.fieldName, types)$
>>                      

body(class, type, managed, boxed, prim, field, types) ::= <<
package $package(type)$;

import java.util.Objects;
import java.util.function.Predicate;

@FunctionalInterface
public interface $class$ extends Predicate<$boxed$> {


  boolean test($prim$ val);
  
  default boolean test($boxed$ val) {
    return test(val.$type.shortLower$Value());
  }
  
  default $class$ and($class$ other) {
    Objects.requireNonNull(other);
    return (t) -> test(t) && other.test(t);
  }
  
  default $class$ and(Predicate<? super $boxed$> other) {
    Objects.requireNonNull(other);
    return (t) -> test(t) && other.test(t);
  }
  
  default $class$ negate() {
    return (t) -> !test(t);
  }
  
  default $class$ or($class$ other) {
    Objects.requireNonNull(other);
    return (t) -> test(t) || other.test(t);
  }
  
  default $class$ or(Predicate<? super $boxed$> other) {
    Objects.requireNonNull(other);
    return (t) -> test(t) || other.test(t);
  }
  
  static $class$ isEqual($prim$ val) {
    return (t) -> t == val;
  }

  static $class$ isNotEqual($prim$ val) {
    return (t) -> t != val;
  }

$if(type.numeric)$
$["LessThan","GreaterThan","LessOrEqual","GreaterOrEqual"],
 ["<",">","<=",">="]
 :{ func, op |
  static $class$ is$func$($prim$ val) {
    return (t) -> t $op$ val;
  \}
}
$
$endif$  

  
}
>>