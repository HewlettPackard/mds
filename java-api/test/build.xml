<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<!--

  Managed Data Structures
  Copyright Â© 2016 Hewlett Packard Enterprise Development Company LP.

  This program is free software: you can redistribute it and/or modify
  it under the terms of the GNU Lesser General Public License as published by
  the Free Software Foundation, either version 3 of the License, or
  (at your option) any later version.

  This program is distributed in the hope that it will be useful,
  but WITHOUT ANY WARRANTY; without even the implied warranty of
  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  GNU Lesser General Public License for more details.

  You should have received a copy of the GNU Lesser General Public License
  along with this program.  If not, see <http://www.gnu.org/licenses/>.

  As an exception, the copyright holders of this Library grant you permission
  to (i) compile an Application with the Library, and (ii) distribute the 
  Application containing code generated by the Library and added to the 
  Application during this compilation process under terms of your choice, 
  provided you also meet the terms and conditions of the Application license.

-->

<project basedir="." default="build" name="mds-test">
	<property environment="env" />
	<property name="MDS - Java API.location" value="../../java-api" />
	<property name="ECLIPSE_HOME" value="../../../../../../opt/eclipse/eclipse-luna-c++/" />
	<property name="debuglevel" value="source,lines,vars" />
	<property name="target" value="1.8" />
	<property name="source" value="1.8" />
        <condition property="printBuildRecordErrors" value="" else="-Xstdout /dev/null">
          <isset property="env.PRINT_BUILD_RECORD_ERRORS"/>
        </condition>
	<path id="mds-test.classpath">
		<pathelement location="libs/log4j-1.2.15.jar" />
		<pathelement location="libs/mds-java-api.jar" />
	</path>
	<path id="annotation.processor.classpath">
		<pathelement location="libs/mds-annotations-processor.jar" />
	</path>
	<target name="init">
		<mkdir dir="generated-src" />
		<mkdir dir="bin" />
		<copy includeemptydirs="false" todir="bin">
			<fileset dir="src">
				<exclude name="**/*.java" />
			</fileset>
		</copy>
	</target>
	<target name="clean">
		<delete dir="bin" />
		<delete dir="generated-src" />
		<mkdir dir="generated-src" />
	</target>
	
	<target depends="clean" name="cleanall">
		<ant antfile="build.xml" dir="${MDS - Java API.location}" inheritAll="false" target="clean" />
	</target>
	
	<target depends="build-project" name="build" />

	<target depends="init" name="build-records">
	  <echo message="${ant.project.name}: ${ant.file} generating records" />
          <echo message="  Errors in this pass will be ignored" />
          <echo message="  Set $PRINT_BUILD_RECORD_ERRORS to see them" />
		<javac debug="true" debuglevel="${debuglevel}" destdir="generated-src" includeantruntime="false" source="${source}" target="${target}" failonerror="false">
			<classpath refid="mds-test.classpath" />
			<classpath refid="annotation.processor.classpath" />
			<src path="src"/>
			<src path="generated-src"/>
			<include name="**/*Schema.java"/>
                        <compilerarg line="${printBuildRecordErrors}" />
                        <compilerarg line="-encoding utf-8"/>
		</javac>
	</target>

	<target depends="build-records" name="build-project">
		<echo message="${ant.project.name}: ${ant.file} compiling project..." />
		<javac debug="true" debuglevel="${debuglevel}" destdir="bin" includeantruntime="false" source="${source}" target="${target}">
			<classpath refid="mds-test.classpath" />
			<src path="src"/>
			<src path="generated-src"/>
                        <compilerarg line="-encoding utf-8"/>
                        <compilerarg line="-Xlint:unchecked"/>
		</javac>
	</target>

	<target description="Build all projects which reference this project. Useful to propagate changes." name="build-refprojects" />
	<target description="copy Eclipse compiler jars to ant lib directory" name="init-eclipse-compiler">
		<copy todir="${ant.library.dir}">
			<fileset dir="${ECLIPSE_HOME}/plugins" includes="org.eclipse.jdt.core_*.jar" />
		</copy>
		<unzip dest="${ant.library.dir}">
			<patternset includes="jdtCompilerAdapter.jar" />
			<fileset dir="${ECLIPSE_HOME}/plugins" includes="org.eclipse.jdt.core_*.jar" />
		</unzip>
	</target>
	<target description="compile project with Eclipse compiler" name="build-eclipse-compiler">
		<property name="build.compiler" value="org.eclipse.jdt.core.JDTCompilerAdapter" />
		<antcall target="build" />
	</target>
</project>
