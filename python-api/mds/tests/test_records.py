# -*- coding: utf-8 -*-
"""
Managed Data Structures
Copyright Â© 2017 Hewlett Packard Enterprise Development Company LP.

This program is free software: you can redistribute it and/or modify
it under the terms of the GNU Lesser General Public License as published by
the Free Software Foundation, either version 3 of the License, or
(at your option) any later version.

This program is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU Lesser General Public License for more details.

You should have received a copy of the GNU Lesser General Public License
along with this program.  If not, see <http://www.gnu.org/licenses/>.

As an exception, the copyright holders of this Library grant you permission
to (i) compile an Application with the Library, and (ii) distribute the 
Application containing code generated by the Library and added to the 
Application during this compilation process under terms of your choice, 
provided you also meet the terms and conditions of the Application license.
"""

import unittest

from mds.managed import Record
from mds.typing import Types

class SimpleRecord(Record):

    _ident = "schema_SimpleRecord"

    def __init__(self):
        self._register_field(Types.bool, "is_active", True)

        super().__init__()

class LessSimpleRecord(Record):

    _ident = "schema_SimpleRecord"

    def __init__(self):
        self._register_field(Types.bool, "is_active", True)
        self._register_field(Types.bool, "is_active", True)

        super().__init__()

class NoIdentRecord(Record):

    _ident = "schema_SimpleRecord"

    def __init__(self):
        self._register_field(Types.bool, "is_active", True)

        super().__init__()


class TestRecordsCreation(unittest.TestCase):

    def test_can_make_simple(self):
        

    def test_can_make_complex(self):
        # TODO Deal with all RecordMemebers
        pass


class TestRecordNamespaceIntegration(unittest.TestCase):
    # TODO: The order in this one is important

    def setUp(self):
        # TODO Setup a record to use here
        pass

    def test_can_bind_to_namespace(self):
        pass

    def test_can_retrieve_from_namespace(self):
        pass

    def test_forwarding_resolution(self):
        pass


if __name__ == '__main__':
    unittest.main()
