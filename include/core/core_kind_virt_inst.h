/*
 *
 *  Managed Data Structures
 *  Copyright Â© 2016 Hewlett Packard Enterprise Development Company LP.
 *
 *  This program is free software: you can redistribute it and/or modify
 *  it under the terms of the GNU Lesser General Public License as published by
 *  the Free Software Foundation, either version 3 of the License, or
 *  (at your option) any later version.
 *
 *  This program is distributed in the hope that it will be useful,
 *  but WITHOUT ANY WARRANTY; without even the implied warranty of
 *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 *  GNU Lesser General Public License for more details.
 *
 *  You should have received a copy of the GNU Lesser General Public License
 *  along with this program.  If not, see <http://www.gnu.org/licenses/>.
 *
 *  As an exception, the copyright holders of this Library grant you permission
 *  to (i) compile an Application with the Library, and (ii) distribute the 
 *  Application containing code generated by the Library and added to the 
 *  Application during this compilation process under terms of your choice, 
 *  provided you also meet the terms and conditions of the Application license.
 *
 */

/*
 * core_kind.h
 *
 *  Created on: Oct 21, 2014
 *      Author: evank
 */

#ifndef CORE_KIND_VIRT_INST_H_
#define CORE_KIND_VIRT_INST_H_

#include "core/core_kind.h"
#include "core/core_record.h"
#include "core/core_array.h"
#include "core/core_naming.h"

namespace mds {
  namespace core {
    template <template <kind K> class T, typename Table>
    void bind_all_kinds(Table &t) {
      t.template bind<T<kind::BOOL>>();
      t.template bind<T<kind::BYTE>>();
      t.template bind<T<kind::UBYTE>>();
      t.template bind<T<kind::SHORT>>();
      t.template bind<T<kind::USHORT>>();
      t.template bind<T<kind::INT>>();
      t.template bind<T<kind::UINT>>();
      t.template bind<T<kind::LONG>>();
      t.template bind<T<kind::ULONG>>();
      t.template bind<T<kind::FLOAT>>();
      t.template bind<T<kind::DOUBLE>>();
      t.template bind<T<kind::RECORD>>();
      t.template bind<T<kind::STRING>>();
      t.template bind<T<kind::BINDING>>();
      t.template bind<T<kind::ARRAY>>();
      t.template bind<T<kind::NAMESPACE>>();
    }

  }
}




#endif /* CORE_KIND_VIRT_INST_H_ */
